openapi: 3.0.3
info:
  title: Voz Cidadã API
  description: API para o sistema Voz Cidadã
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Servidor de desenvolvimento local

tags:
  - name: Autenticação
    description: Operações relacionadas à autenticação de usuários
  - name: Funcionário
    description: Operações relacionadas a funcionários
  - name: Chamado
    description: Operações relacionadas a chamados
  - name: Upload de imagens
    description: Operações relacionadas ao upload de imagens para chamados
  - name: Histórico
    description: Operações relacionadas ao histórico de atualizações dos chamados

paths:
  /api/historico:
    get:
      tags:
        - Histórico
      summary: Listar todos os históricos
      description: Retorna uma lista paginada de todos os registros históricos
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de históricos recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/HistoricoDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
    post:
      tags:
        - Histórico
      summary: Criar um novo registro histórico
      description: Cria um novo registro histórico com os dados fornecidos
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoricoDTO'
      responses:
        '201':
          description: Registro histórico criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricoDTO'
          headers:
            Location:
              description: URL do registro histórico criado
              schema:
                type: string
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para criar registro histórico

  /api/historico/{id}:
      get:
        tags:
          - Histórico
        summary: Buscar histórico por ID
        description: Retorna os detalhes de um registro histórico específico
        security:
          - bearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: Registro histórico encontrado com sucesso
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HistoricoDTO'
          '401':
            description: Não autenticado
          '403':
            description: Sem permissão para acessar o recurso
          '404':
            description: Registro histórico não encontrado
      put:
        tags:
          - Histórico
        summary: Atualizar um registro histórico existente
        description: Atualiza os dados de um registro histórico existente
        security:
          - bearerAuth: [ ]
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricoDTO'
        responses:
          '200':
            description: Registro histórico atualizado com sucesso
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HistoricoDTO'
          '400':
            description: Dados de entrada inválidos
          '401':
            description: Não autenticado
          '403':
            description: Sem permissão para atualizar este registro
          '404':
            description: Registro histórico não encontrado
      delete:
        tags:
          - Histórico
        summary: Excluir um registro histórico
        description: Exclui um registro histórico específico
        security:
          - bearerAuth: [ ]
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '204':
            description: Registro histórico excluído com sucesso
          '401':
            description: Não autenticado
          '403':
            description: Sem permissão para excluir este registro
          '404':
            description: Registro histórico não encontrado
  /auth/login:
    post:
      tags:
        - Autenticação
      summary: Autenticar usuário
      description: Autenticação de usuário com email e senha
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationDTO'
      responses:
        '200':
          description: Autenticação bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '400':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/oauth/google:
    post:
      tags:
        - Autenticação
      summary: Login com Google
      description: Autenticação de usuário usando conta Google
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleEmailDTO'
      responses:
        '200':
          description: Autenticação bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '400':
          description: Falha na autenticação com Google
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/register:
    post:
      tags:
        - Autenticação
      summary: Registrar novo usuário
      description: Registro de um novo usuário comum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDTO'
      responses:
        '200':
          description: Usuário registrado com sucesso
        '400':
          description: Erro no registro (ex. email já existe)

  /auth/register/admin:
    post:
      tags:
        - Autenticação
      summary: Registrar novo administrador
      description: Registro de um novo usuário com privilégios de administrador
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDTO'
      responses:
        '200':
          description: Administrador registrado com sucesso
        '400':
          description: Erro no registro (ex. email já existe)
        '403':
          description: Sem permissão para criar administrador

  /auth/changePassword:
    patch:
      tags:
        - Autenticação
      summary: Alterar senha
      description: Altera a senha do usuário autenticado
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDTO'
      responses:
        '200':
          description: Senha alterada com sucesso
        '400':
          description: Erro na alteração de senha
        '401':
          description: Token inválido ou senha atual incorreta

  /auth/updateAuthStatus:
    patch:
      tags:
        - Autenticação
      summary: Atualizar status de autenticação
      description: Atualiza o status de autenticação do usuário
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Status atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '401':
          description: Token inválido ou expirado

  /auth/refresh:
    post:
      tags:
        - Autenticação
      summary: Renovar token
      description: Renovar token de autenticação usando refresh token
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Tokens renovados com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '401':
          description: Refresh token inválido ou expirado

  /api/funcionario:
    get:
      tags:
        - Funcionário
      summary: Listar todos os funcionários
      description: Retorna uma lista paginada de funcionários
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de funcionários recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/FuncionarioDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '403':
          description: Sem permissão para acessar o recurso
    post:
      tags:
        - Funcionário
      summary: Criar perfil de administrador
      description: Cria um novo perfil de administrador
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuncionarioDTO'
      responses:
        '201':
          description: Perfil de administrador criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioDTO'
        '403':
          description: Sem permissão para criar administrador

  /api/funcionario/{id}:
    get:
      tags:
        - Funcionário
      summary: Buscar funcionário por ID
      description: Retorna os detalhes de um funcionário específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Funcionário encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioDTO'
        '404':
          description: Funcionário não encontrado

  /api/funcionario/auth/{authUserId}:
    get:
      tags:
        - Funcionário
      summary: Buscar funcionário por ID de usuário autenticado
      description: Retorna os detalhes do funcionário associado ao ID de usuário autenticado
      security:
        - bearerAuth: [ ]
      parameters:
        - name: authUserId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Funcionário encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioDTO'
        '404':
          description: Funcionário não encontrado

  /api/chamado:
    get:
      tags:
        - Chamado
      summary: Listar todos os chamados
      description: Retorna uma lista paginada de todos os chamados
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de chamados recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChamadoDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
    post:
      tags:
        - Chamado
      summary: Criar um novo chamado
      description: Cria um novo chamado com os dados fornecidos
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChamadoDTO'
      responses:
        '201':
          description: Chamado criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoDTO'
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado

  /api/chamado/{id}:
    get:
      tags:
        - Chamado
      summary: Buscar chamado por ID
      description: Retorna os detalhes de um chamado específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Chamado encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoDTO'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar o recurso
        '404':
          description: Chamado não encontrado
    put:
      tags:
        - Chamado
      summary: Atualizar um chamado existente
      description: Atualiza os dados de um chamado existente
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChamadoDTO'
      responses:
        '200':
          description: Chamado atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoDTO'
        '400':
          description: Dados de entrada inválidos
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para atualizar este chamado
        '404':
          description: Chamado não encontrado
    delete:
      tags:
        - Chamado
      summary: Excluir um chamado
      description: Exclui um chamado específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Chamado excluído com sucesso
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para excluir este chamado
        '404':
          description: Chamado não encontrado

  /api/chamado/user/{userId}:
    get:
      tags:
        - Chamado
      summary: Listar chamados por ID de usuário
      description: Retorna uma lista paginada de chamados criados por um usuário específico
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de chamados do usuário recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChamadoDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar chamados de outro usuário
        '404':
          description: Usuário não encontrado

  /api/chamado/secretaria/{secretaria}:
    get:
      tags:
        - Chamado
      summary: Listar chamados por secretaria
      description: Retorna uma lista paginada de chamados designados a uma secretaria específica
      security:
        - bearerAuth: [ ]
      parameters:
        - name: secretaria
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Lista de chamados da secretaria recuperada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChamadoDTO'
                  page:
                    $ref: '#/components/schemas/PageInfo'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão para acessar chamados desta secretaria
  /api/chamado/upload/{filename}:
    get:
      tags:
        - Upload de imagens
      summary: Recuperar imagem de chamado
      description: Retorna a imagem associada a um chamado pelo nome do arquivo
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
          description: Nome do arquivo da imagem
      responses:
        '200':
          description: Imagem recuperada com sucesso
          content:
            image/*:
              schema:
                type: string
                format: binary
        '404':
          description: Imagem não encontrada
        '500':
          description: Erro interno ao recuperar a imagem

  /api/chamado/upload:
      post:
        tags:
          - Upload de imagens
          - Chamado
        summary: Criar chamado com imagem
        description: Cria um novo chamado com upload de imagem
        security:
          - bearerAuth: [ ]
        requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  usuarioId:
                    type: integer
                    format: int64
                  secretaria:
                    type: string
                  descricao:
                    type: string
                  fotoAntesFile:
                    type: string
                    format: binary
        responses:
          '201':
            description: Chamado criado com sucesso com imagem
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ChamadoDTO'
            headers:
              Location:
                description: URL do chamado criado
                schema:
                  type: string
          '400':
            description: Dados inválidos ou falha no upload da imagem
          '401':
            description: Não autenticado
          '403':
            description: Sem permissão para criar chamado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    pageSizeParam:
      name: size
      in: query
      description: Número de itens por página
      schema:
        type: integer
        default: 10
    pageNumberParam:
      name: page
      in: query
      description: Número da página (começando em 0)
      schema:
        type: integer
        default: 0
    sortParam:
      name: sort
      in: query
      description: Ordenação (ex. campo,asc ou campo,desc)
      schema:
        type: string

  schemas:
    AuthenticationDTO:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: Email ou nome de usuário
        password:
          type: string
          description: Senha do usuário
          format: password

    GoogleEmailDTO:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: Email da conta Google
          format: email

    RegisterDTO:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: Email ou nome de usuário
        password:
          type: string
          description: Senha do usuário
          format: password

    ChangePasswordDTO:
      type: object
      required:
        - currentPassword
        - newPassword
      properties:
        currentPassword:
          type: string
          description: Senha atual
          format: password
        newPassword:
          type: string
          description: Nova senha
          format: password

    LoginResponseDTO:
      type: object
      properties:
        accessToken:
          type: string
          description: Token de acesso JWT
        refreshToken:
          type: string
          description: Token de atualização JWT

    FuncionarioDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        cargo:
          type: string
        departamento:
          type: string
        authUserId:
          type: integer
          format: int64
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ChamadoDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        usuarioId:
          type: integer
          format: int64
          description: ID do usuário que criou o chamado
        secretaria:
          type: string
          description: Secretaria responsável pelo chamado
        descricao:
          type: string
          description: Descrição detalhada do chamado
        dataCriacao:
          type: string
          format: date-time
          description: Data e hora de criação do chamado
        status:
          type: string
          description: Status atual do chamado
        fotoAntesUrl:
          type: string
          description: URL da imagem associada ao chamado
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    HistoricoDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        acao:
          type: string
          description: Descrição da ação realizada
        dataHora:
          type: string
          format: date-time
          description: Data e hora em que a ação foi registrada
        usuarioId:
          type: integer
          format: int64
          description: ID do usuário que realizou a ação
        detalhes:
          type: string
          description: Detalhes adicionais sobre a ação
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensagem de erro
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          description: Código de status HTTP

    PageInfo:
      type: object
      properties:
        size:
          type: integer
          description: Número de elementos por página
        totalElements:
          type: integer
          description: Número total de elementos
        totalPages:
          type: integer
          description: Número total de páginas
        number:
          type: integer
          description: Página atual (começando em 0)

    Link:
      type: object
      properties:
        rel:
          type: string
          description: Relação do link
        href:
          type: string
          description: URL do link